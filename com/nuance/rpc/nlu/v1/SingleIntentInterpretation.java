// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: single-intent-interpretation.proto

package com.nuance.rpc.nlu.v1;

/**
 * <pre>
 **
 * Single-intent interpretation. Included in [Interpretation](#interpretation).
 * </pre>
 *
 * Protobuf type {@code nuance.nlu.v1.SingleIntentInterpretation}
 */
public  final class SingleIntentInterpretation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nuance.nlu.v1.SingleIntentInterpretation)
    SingleIntentInterpretationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SingleIntentInterpretation.newBuilder() to construct.
  private SingleIntentInterpretation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SingleIntentInterpretation() {
    intent_ = "";
    origin_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SingleIntentInterpretation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SingleIntentInterpretation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            intent_ = s;
            break;
          }
          case 29: {

            confidence_ = input.readFloat();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            origin_ = rawValue;
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              entities_ = com.google.protobuf.MapField.newMapField(
                  EntitiesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList>
            entities__ = input.readMessage(
                EntitiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            entities_.getMutableMap().put(
                entities__.getKey(), entities__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.nuance.rpc.nlu.v1.SingleIntentInterpretationProto.internal_static_nuance_nlu_v1_SingleIntentInterpretation_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetEntities();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.nuance.rpc.nlu.v1.SingleIntentInterpretationProto.internal_static_nuance_nlu_v1_SingleIntentInterpretation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.nuance.rpc.nlu.v1.SingleIntentInterpretation.class, com.nuance.rpc.nlu.v1.SingleIntentInterpretation.Builder.class);
  }

  public static final int INTENT_FIELD_NUMBER = 2;
  private volatile java.lang.Object intent_;
  /**
   * <pre>
   * Intent name, as specified in the semantic model.
   * </pre>
   *
   * <code>string intent = 2;</code>
   * @return The intent.
   */
  public java.lang.String getIntent() {
    java.lang.Object ref = intent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      intent_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Intent name, as specified in the semantic model.
   * </pre>
   *
   * <code>string intent = 2;</code>
   * @return The bytes for intent.
   */
  public com.google.protobuf.ByteString
      getIntentBytes() {
    java.lang.Object ref = intent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      intent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONFIDENCE_FIELD_NUMBER = 3;
  private float confidence_;
  /**
   * <pre>
   * Confidence score (between 0.0 and 1.0 inclusive). The higher the score, the likelier the detected intent is correct.
   * </pre>
   *
   * <code>float confidence = 3;</code>
   * @return The confidence.
   */
  public float getConfidence() {
    return confidence_;
  }

  public static final int ORIGIN_FIELD_NUMBER = 4;
  private int origin_;
  /**
   * <pre>
   * How the intent was detected.
   * </pre>
   *
   * <code>.nuance.nlu.v1.EnumOrigin origin = 4;</code>
   * @return The enum numeric value on the wire for origin.
   */
  public int getOriginValue() {
    return origin_;
  }
  /**
   * <pre>
   * How the intent was detected.
   * </pre>
   *
   * <code>.nuance.nlu.v1.EnumOrigin origin = 4;</code>
   * @return The origin.
   */
  public com.nuance.rpc.nlu.v1.EnumOrigin getOrigin() {
    @SuppressWarnings("deprecation")
    com.nuance.rpc.nlu.v1.EnumOrigin result = com.nuance.rpc.nlu.v1.EnumOrigin.valueOf(origin_);
    return result == null ? com.nuance.rpc.nlu.v1.EnumOrigin.UNRECOGNIZED : result;
  }

  public static final int ENTITIES_FIELD_NUMBER = 5;
  private static final class EntitiesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList>newDefaultInstance(
                com.nuance.rpc.nlu.v1.SingleIntentInterpretationProto.internal_static_nuance_nlu_v1_SingleIntentInterpretation_EntitiesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.nuance.rpc.nlu.v1.SingleIntentEntityList.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> entities_;
  private com.google.protobuf.MapField<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList>
  internalGetEntities() {
    if (entities_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          EntitiesDefaultEntryHolder.defaultEntry);
    }
    return entities_;
  }

  public int getEntitiesCount() {
    return internalGetEntities().getMap().size();
  }
  /**
   * <pre>
   * Map of entity names to lists of entities.
   * </pre>
   *
   * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
   */

  public boolean containsEntities(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetEntities().getMap().containsKey(key);
  }
  /**
   * Use {@link #getEntitiesMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> getEntities() {
    return getEntitiesMap();
  }
  /**
   * <pre>
   * Map of entity names to lists of entities.
   * </pre>
   *
   * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
   */

  public java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> getEntitiesMap() {
    return internalGetEntities().getMap();
  }
  /**
   * <pre>
   * Map of entity names to lists of entities.
   * </pre>
   *
   * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
   */

  public com.nuance.rpc.nlu.v1.SingleIntentEntityList getEntitiesOrDefault(
      java.lang.String key,
      com.nuance.rpc.nlu.v1.SingleIntentEntityList defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> map =
        internalGetEntities().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of entity names to lists of entities.
   * </pre>
   *
   * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
   */

  public com.nuance.rpc.nlu.v1.SingleIntentEntityList getEntitiesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> map =
        internalGetEntities().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getIntentBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, intent_);
    }
    if (confidence_ != 0F) {
      output.writeFloat(3, confidence_);
    }
    if (origin_ != com.nuance.rpc.nlu.v1.EnumOrigin.UNKNOWN.getNumber()) {
      output.writeEnum(4, origin_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetEntities(),
        EntitiesDefaultEntryHolder.defaultEntry,
        5);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getIntentBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, intent_);
    }
    if (confidence_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, confidence_);
    }
    if (origin_ != com.nuance.rpc.nlu.v1.EnumOrigin.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, origin_);
    }
    for (java.util.Map.Entry<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> entry
         : internalGetEntities().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList>
      entities__ = EntitiesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, entities__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.nuance.rpc.nlu.v1.SingleIntentInterpretation)) {
      return super.equals(obj);
    }
    com.nuance.rpc.nlu.v1.SingleIntentInterpretation other = (com.nuance.rpc.nlu.v1.SingleIntentInterpretation) obj;

    if (!getIntent()
        .equals(other.getIntent())) return false;
    if (java.lang.Float.floatToIntBits(getConfidence())
        != java.lang.Float.floatToIntBits(
            other.getConfidence())) return false;
    if (origin_ != other.origin_) return false;
    if (!internalGetEntities().equals(
        other.internalGetEntities())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INTENT_FIELD_NUMBER;
    hash = (53 * hash) + getIntent().hashCode();
    hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getConfidence());
    hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
    hash = (53 * hash) + origin_;
    if (!internalGetEntities().getMap().isEmpty()) {
      hash = (37 * hash) + ENTITIES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetEntities().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.nuance.rpc.nlu.v1.SingleIntentInterpretation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   * Single-intent interpretation. Included in [Interpretation](#interpretation).
   * </pre>
   *
   * Protobuf type {@code nuance.nlu.v1.SingleIntentInterpretation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nuance.nlu.v1.SingleIntentInterpretation)
      com.nuance.rpc.nlu.v1.SingleIntentInterpretationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nuance.rpc.nlu.v1.SingleIntentInterpretationProto.internal_static_nuance_nlu_v1_SingleIntentInterpretation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetEntities();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableEntities();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nuance.rpc.nlu.v1.SingleIntentInterpretationProto.internal_static_nuance_nlu_v1_SingleIntentInterpretation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nuance.rpc.nlu.v1.SingleIntentInterpretation.class, com.nuance.rpc.nlu.v1.SingleIntentInterpretation.Builder.class);
    }

    // Construct using com.nuance.rpc.nlu.v1.SingleIntentInterpretation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      intent_ = "";

      confidence_ = 0F;

      origin_ = 0;

      internalGetMutableEntities().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.nuance.rpc.nlu.v1.SingleIntentInterpretationProto.internal_static_nuance_nlu_v1_SingleIntentInterpretation_descriptor;
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.SingleIntentInterpretation getDefaultInstanceForType() {
      return com.nuance.rpc.nlu.v1.SingleIntentInterpretation.getDefaultInstance();
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.SingleIntentInterpretation build() {
      com.nuance.rpc.nlu.v1.SingleIntentInterpretation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.SingleIntentInterpretation buildPartial() {
      com.nuance.rpc.nlu.v1.SingleIntentInterpretation result = new com.nuance.rpc.nlu.v1.SingleIntentInterpretation(this);
      int from_bitField0_ = bitField0_;
      result.intent_ = intent_;
      result.confidence_ = confidence_;
      result.origin_ = origin_;
      result.entities_ = internalGetEntities();
      result.entities_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.nuance.rpc.nlu.v1.SingleIntentInterpretation) {
        return mergeFrom((com.nuance.rpc.nlu.v1.SingleIntentInterpretation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.nuance.rpc.nlu.v1.SingleIntentInterpretation other) {
      if (other == com.nuance.rpc.nlu.v1.SingleIntentInterpretation.getDefaultInstance()) return this;
      if (!other.getIntent().isEmpty()) {
        intent_ = other.intent_;
        onChanged();
      }
      if (other.getConfidence() != 0F) {
        setConfidence(other.getConfidence());
      }
      if (other.origin_ != 0) {
        setOriginValue(other.getOriginValue());
      }
      internalGetMutableEntities().mergeFrom(
          other.internalGetEntities());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.nuance.rpc.nlu.v1.SingleIntentInterpretation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.nuance.rpc.nlu.v1.SingleIntentInterpretation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object intent_ = "";
    /**
     * <pre>
     * Intent name, as specified in the semantic model.
     * </pre>
     *
     * <code>string intent = 2;</code>
     * @return The intent.
     */
    public java.lang.String getIntent() {
      java.lang.Object ref = intent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Intent name, as specified in the semantic model.
     * </pre>
     *
     * <code>string intent = 2;</code>
     * @return The bytes for intent.
     */
    public com.google.protobuf.ByteString
        getIntentBytes() {
      java.lang.Object ref = intent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Intent name, as specified in the semantic model.
     * </pre>
     *
     * <code>string intent = 2;</code>
     * @param value The intent to set.
     * @return This builder for chaining.
     */
    public Builder setIntent(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      intent_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Intent name, as specified in the semantic model.
     * </pre>
     *
     * <code>string intent = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIntent() {
      
      intent_ = getDefaultInstance().getIntent();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Intent name, as specified in the semantic model.
     * </pre>
     *
     * <code>string intent = 2;</code>
     * @param value The bytes for intent to set.
     * @return This builder for chaining.
     */
    public Builder setIntentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      intent_ = value;
      onChanged();
      return this;
    }

    private float confidence_ ;
    /**
     * <pre>
     * Confidence score (between 0.0 and 1.0 inclusive). The higher the score, the likelier the detected intent is correct.
     * </pre>
     *
     * <code>float confidence = 3;</code>
     * @return The confidence.
     */
    public float getConfidence() {
      return confidence_;
    }
    /**
     * <pre>
     * Confidence score (between 0.0 and 1.0 inclusive). The higher the score, the likelier the detected intent is correct.
     * </pre>
     *
     * <code>float confidence = 3;</code>
     * @param value The confidence to set.
     * @return This builder for chaining.
     */
    public Builder setConfidence(float value) {
      
      confidence_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Confidence score (between 0.0 and 1.0 inclusive). The higher the score, the likelier the detected intent is correct.
     * </pre>
     *
     * <code>float confidence = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearConfidence() {
      
      confidence_ = 0F;
      onChanged();
      return this;
    }

    private int origin_ = 0;
    /**
     * <pre>
     * How the intent was detected.
     * </pre>
     *
     * <code>.nuance.nlu.v1.EnumOrigin origin = 4;</code>
     * @return The enum numeric value on the wire for origin.
     */
    public int getOriginValue() {
      return origin_;
    }
    /**
     * <pre>
     * How the intent was detected.
     * </pre>
     *
     * <code>.nuance.nlu.v1.EnumOrigin origin = 4;</code>
     * @param value The enum numeric value on the wire for origin to set.
     * @return This builder for chaining.
     */
    public Builder setOriginValue(int value) {
      origin_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How the intent was detected.
     * </pre>
     *
     * <code>.nuance.nlu.v1.EnumOrigin origin = 4;</code>
     * @return The origin.
     */
    public com.nuance.rpc.nlu.v1.EnumOrigin getOrigin() {
      @SuppressWarnings("deprecation")
      com.nuance.rpc.nlu.v1.EnumOrigin result = com.nuance.rpc.nlu.v1.EnumOrigin.valueOf(origin_);
      return result == null ? com.nuance.rpc.nlu.v1.EnumOrigin.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * How the intent was detected.
     * </pre>
     *
     * <code>.nuance.nlu.v1.EnumOrigin origin = 4;</code>
     * @param value The origin to set.
     * @return This builder for chaining.
     */
    public Builder setOrigin(com.nuance.rpc.nlu.v1.EnumOrigin value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      origin_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How the intent was detected.
     * </pre>
     *
     * <code>.nuance.nlu.v1.EnumOrigin origin = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOrigin() {
      
      origin_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> entities_;
    private com.google.protobuf.MapField<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList>
    internalGetEntities() {
      if (entities_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EntitiesDefaultEntryHolder.defaultEntry);
      }
      return entities_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList>
    internalGetMutableEntities() {
      onChanged();;
      if (entities_ == null) {
        entities_ = com.google.protobuf.MapField.newMapField(
            EntitiesDefaultEntryHolder.defaultEntry);
      }
      if (!entities_.isMutable()) {
        entities_ = entities_.copy();
      }
      return entities_;
    }

    public int getEntitiesCount() {
      return internalGetEntities().getMap().size();
    }
    /**
     * <pre>
     * Map of entity names to lists of entities.
     * </pre>
     *
     * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
     */

    public boolean containsEntities(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetEntities().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEntitiesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> getEntities() {
      return getEntitiesMap();
    }
    /**
     * <pre>
     * Map of entity names to lists of entities.
     * </pre>
     *
     * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
     */

    public java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> getEntitiesMap() {
      return internalGetEntities().getMap();
    }
    /**
     * <pre>
     * Map of entity names to lists of entities.
     * </pre>
     *
     * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
     */

    public com.nuance.rpc.nlu.v1.SingleIntentEntityList getEntitiesOrDefault(
        java.lang.String key,
        com.nuance.rpc.nlu.v1.SingleIntentEntityList defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> map =
          internalGetEntities().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of entity names to lists of entities.
     * </pre>
     *
     * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
     */

    public com.nuance.rpc.nlu.v1.SingleIntentEntityList getEntitiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> map =
          internalGetEntities().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearEntities() {
      internalGetMutableEntities().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Map of entity names to lists of entities.
     * </pre>
     *
     * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
     */

    public Builder removeEntities(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableEntities().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList>
    getMutableEntities() {
      return internalGetMutableEntities().getMutableMap();
    }
    /**
     * <pre>
     * Map of entity names to lists of entities.
     * </pre>
     *
     * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
     */
    public Builder putEntities(
        java.lang.String key,
        com.nuance.rpc.nlu.v1.SingleIntentEntityList value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableEntities().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Map of entity names to lists of entities.
     * </pre>
     *
     * <code>map&lt;string, .nuance.nlu.v1.SingleIntentEntityList&gt; entities = 5;</code>
     */

    public Builder putAllEntities(
        java.util.Map<java.lang.String, com.nuance.rpc.nlu.v1.SingleIntentEntityList> values) {
      internalGetMutableEntities().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nuance.nlu.v1.SingleIntentInterpretation)
  }

  // @@protoc_insertion_point(class_scope:nuance.nlu.v1.SingleIntentInterpretation)
  private static final com.nuance.rpc.nlu.v1.SingleIntentInterpretation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.nuance.rpc.nlu.v1.SingleIntentInterpretation();
  }

  public static com.nuance.rpc.nlu.v1.SingleIntentInterpretation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SingleIntentInterpretation>
      PARSER = new com.google.protobuf.AbstractParser<SingleIntentInterpretation>() {
    @java.lang.Override
    public SingleIntentInterpretation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SingleIntentInterpretation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SingleIntentInterpretation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SingleIntentInterpretation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.nuance.rpc.nlu.v1.SingleIntentInterpretation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

