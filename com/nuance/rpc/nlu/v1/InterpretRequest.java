// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: runtime.proto

package com.nuance.rpc.nlu.v1;

/**
 * <pre>
 **
 * The input to interpret, and parameters, model, extra resources, and
 * client tags. Included in the [Nlu](#nlu) service.
 * </pre>
 *
 * Protobuf type {@code nuance.nlu.v1.InterpretRequest}
 */
public  final class InterpretRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nuance.nlu.v1.InterpretRequest)
    InterpretRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InterpretRequest.newBuilder() to construct.
  private InterpretRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InterpretRequest() {
    resources_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new InterpretRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private InterpretRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.nuance.rpc.nlu.v1.InterpretationParameters.Builder subBuilder = null;
            if (parameters_ != null) {
              subBuilder = parameters_.toBuilder();
            }
            parameters_ = input.readMessage(com.nuance.rpc.nlu.v1.InterpretationParameters.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(parameters_);
              parameters_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.nuance.rpc.nlu.v1.ResourceReference.Builder subBuilder = null;
            if (model_ != null) {
              subBuilder = model_.toBuilder();
            }
            model_ = input.readMessage(com.nuance.rpc.nlu.v1.ResourceReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(model_);
              model_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              resources_ = new java.util.ArrayList<com.nuance.rpc.nlu.v1.InterpretationResource>();
              mutable_bitField0_ |= 0x00000001;
            }
            resources_.add(
                input.readMessage(com.nuance.rpc.nlu.v1.InterpretationResource.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              clientData_ = com.google.protobuf.MapField.newMapField(
                  ClientDataDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            clientData__ = input.readMessage(
                ClientDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            clientData_.getMutableMap().put(
                clientData__.getKey(), clientData__.getValue());
            break;
          }
          case 82: {
            com.nuance.rpc.nlu.v1.InterpretationInput.Builder subBuilder = null;
            if (input_ != null) {
              subBuilder = input_.toBuilder();
            }
            input_ = input.readMessage(com.nuance.rpc.nlu.v1.InterpretationInput.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(input_);
              input_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        resources_ = java.util.Collections.unmodifiableList(resources_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.nuance.rpc.nlu.v1.RuntimeProto.internal_static_nuance_nlu_v1_InterpretRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetClientData();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.nuance.rpc.nlu.v1.RuntimeProto.internal_static_nuance_nlu_v1_InterpretRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.nuance.rpc.nlu.v1.InterpretRequest.class, com.nuance.rpc.nlu.v1.InterpretRequest.Builder.class);
  }

  public static final int PARAMETERS_FIELD_NUMBER = 1;
  private com.nuance.rpc.nlu.v1.InterpretationParameters parameters_;
  /**
   * <pre>
   * Optional parameters for the interpretation.
   * </pre>
   *
   * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
   * @return Whether the parameters field is set.
   */
  public boolean hasParameters() {
    return parameters_ != null;
  }
  /**
   * <pre>
   * Optional parameters for the interpretation.
   * </pre>
   *
   * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
   * @return The parameters.
   */
  public com.nuance.rpc.nlu.v1.InterpretationParameters getParameters() {
    return parameters_ == null ? com.nuance.rpc.nlu.v1.InterpretationParameters.getDefaultInstance() : parameters_;
  }
  /**
   * <pre>
   * Optional parameters for the interpretation.
   * </pre>
   *
   * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
   */
  public com.nuance.rpc.nlu.v1.InterpretationParametersOrBuilder getParametersOrBuilder() {
    return getParameters();
  }

  public static final int MODEL_FIELD_NUMBER = 2;
  private com.nuance.rpc.nlu.v1.ResourceReference model_;
  /**
   * <pre>
   * Required semantic model to perform the interpretation.
   * </pre>
   *
   * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
   * @return Whether the model field is set.
   */
  public boolean hasModel() {
    return model_ != null;
  }
  /**
   * <pre>
   * Required semantic model to perform the interpretation.
   * </pre>
   *
   * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
   * @return The model.
   */
  public com.nuance.rpc.nlu.v1.ResourceReference getModel() {
    return model_ == null ? com.nuance.rpc.nlu.v1.ResourceReference.getDefaultInstance() : model_;
  }
  /**
   * <pre>
   * Required semantic model to perform the interpretation.
   * </pre>
   *
   * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
   */
  public com.nuance.rpc.nlu.v1.ResourceReferenceOrBuilder getModelOrBuilder() {
    return getModel();
  }

  public static final int RESOURCES_FIELD_NUMBER = 3;
  private java.util.List<com.nuance.rpc.nlu.v1.InterpretationResource> resources_;
  /**
   * <pre>
   * Repeated. Optional resources to customize the interpretation.
   * </pre>
   *
   * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
   */
  public java.util.List<com.nuance.rpc.nlu.v1.InterpretationResource> getResourcesList() {
    return resources_;
  }
  /**
   * <pre>
   * Repeated. Optional resources to customize the interpretation.
   * </pre>
   *
   * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
   */
  public java.util.List<? extends com.nuance.rpc.nlu.v1.InterpretationResourceOrBuilder> 
      getResourcesOrBuilderList() {
    return resources_;
  }
  /**
   * <pre>
   * Repeated. Optional resources to customize the interpretation.
   * </pre>
   *
   * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
   */
  public int getResourcesCount() {
    return resources_.size();
  }
  /**
   * <pre>
   * Repeated. Optional resources to customize the interpretation.
   * </pre>
   *
   * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
   */
  public com.nuance.rpc.nlu.v1.InterpretationResource getResources(int index) {
    return resources_.get(index);
  }
  /**
   * <pre>
   * Repeated. Optional resources to customize the interpretation.
   * </pre>
   *
   * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
   */
  public com.nuance.rpc.nlu.v1.InterpretationResourceOrBuilder getResourcesOrBuilder(
      int index) {
    return resources_.get(index);
  }

  public static final int CLIENT_DATA_FIELD_NUMBER = 4;
  private static final class ClientDataDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.nuance.rpc.nlu.v1.RuntimeProto.internal_static_nuance_nlu_v1_InterpretRequest_ClientDataEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> clientData_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetClientData() {
    if (clientData_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ClientDataDefaultEntryHolder.defaultEntry);
    }
    return clientData_;
  }

  public int getClientDataCount() {
    return internalGetClientData().getMap().size();
  }
  /**
   * <pre>
   * Optional key-value pairs to log.
   * </pre>
   *
   * <code>map&lt;string, string&gt; client_data = 4;</code>
   */

  public boolean containsClientData(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetClientData().getMap().containsKey(key);
  }
  /**
   * Use {@link #getClientDataMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getClientData() {
    return getClientDataMap();
  }
  /**
   * <pre>
   * Optional key-value pairs to log.
   * </pre>
   *
   * <code>map&lt;string, string&gt; client_data = 4;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getClientDataMap() {
    return internalGetClientData().getMap();
  }
  /**
   * <pre>
   * Optional key-value pairs to log.
   * </pre>
   *
   * <code>map&lt;string, string&gt; client_data = 4;</code>
   */

  public java.lang.String getClientDataOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetClientData().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Optional key-value pairs to log.
   * </pre>
   *
   * <code>map&lt;string, string&gt; client_data = 4;</code>
   */

  public java.lang.String getClientDataOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetClientData().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int INPUT_FIELD_NUMBER = 10;
  private com.nuance.rpc.nlu.v1.InterpretationInput input_;
  /**
   * <pre>
   * Required input to interpret.
   * </pre>
   *
   * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
   * @return Whether the input field is set.
   */
  public boolean hasInput() {
    return input_ != null;
  }
  /**
   * <pre>
   * Required input to interpret.
   * </pre>
   *
   * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
   * @return The input.
   */
  public com.nuance.rpc.nlu.v1.InterpretationInput getInput() {
    return input_ == null ? com.nuance.rpc.nlu.v1.InterpretationInput.getDefaultInstance() : input_;
  }
  /**
   * <pre>
   * Required input to interpret.
   * </pre>
   *
   * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
   */
  public com.nuance.rpc.nlu.v1.InterpretationInputOrBuilder getInputOrBuilder() {
    return getInput();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (parameters_ != null) {
      output.writeMessage(1, getParameters());
    }
    if (model_ != null) {
      output.writeMessage(2, getModel());
    }
    for (int i = 0; i < resources_.size(); i++) {
      output.writeMessage(3, resources_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetClientData(),
        ClientDataDefaultEntryHolder.defaultEntry,
        4);
    if (input_ != null) {
      output.writeMessage(10, getInput());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (parameters_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getParameters());
    }
    if (model_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getModel());
    }
    for (int i = 0; i < resources_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, resources_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetClientData().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      clientData__ = ClientDataDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, clientData__);
    }
    if (input_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getInput());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.nuance.rpc.nlu.v1.InterpretRequest)) {
      return super.equals(obj);
    }
    com.nuance.rpc.nlu.v1.InterpretRequest other = (com.nuance.rpc.nlu.v1.InterpretRequest) obj;

    if (hasParameters() != other.hasParameters()) return false;
    if (hasParameters()) {
      if (!getParameters()
          .equals(other.getParameters())) return false;
    }
    if (hasModel() != other.hasModel()) return false;
    if (hasModel()) {
      if (!getModel()
          .equals(other.getModel())) return false;
    }
    if (!getResourcesList()
        .equals(other.getResourcesList())) return false;
    if (!internalGetClientData().equals(
        other.internalGetClientData())) return false;
    if (hasInput() != other.hasInput()) return false;
    if (hasInput()) {
      if (!getInput()
          .equals(other.getInput())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasParameters()) {
      hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + getParameters().hashCode();
    }
    if (hasModel()) {
      hash = (37 * hash) + MODEL_FIELD_NUMBER;
      hash = (53 * hash) + getModel().hashCode();
    }
    if (getResourcesCount() > 0) {
      hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
      hash = (53 * hash) + getResourcesList().hashCode();
    }
    if (!internalGetClientData().getMap().isEmpty()) {
      hash = (37 * hash) + CLIENT_DATA_FIELD_NUMBER;
      hash = (53 * hash) + internalGetClientData().hashCode();
    }
    if (hasInput()) {
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.InterpretRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.nuance.rpc.nlu.v1.InterpretRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   * The input to interpret, and parameters, model, extra resources, and
   * client tags. Included in the [Nlu](#nlu) service.
   * </pre>
   *
   * Protobuf type {@code nuance.nlu.v1.InterpretRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nuance.nlu.v1.InterpretRequest)
      com.nuance.rpc.nlu.v1.InterpretRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nuance.rpc.nlu.v1.RuntimeProto.internal_static_nuance_nlu_v1_InterpretRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetClientData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableClientData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nuance.rpc.nlu.v1.RuntimeProto.internal_static_nuance_nlu_v1_InterpretRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nuance.rpc.nlu.v1.InterpretRequest.class, com.nuance.rpc.nlu.v1.InterpretRequest.Builder.class);
    }

    // Construct using com.nuance.rpc.nlu.v1.InterpretRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getResourcesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (parametersBuilder_ == null) {
        parameters_ = null;
      } else {
        parameters_ = null;
        parametersBuilder_ = null;
      }
      if (modelBuilder_ == null) {
        model_ = null;
      } else {
        model_ = null;
        modelBuilder_ = null;
      }
      if (resourcesBuilder_ == null) {
        resources_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        resourcesBuilder_.clear();
      }
      internalGetMutableClientData().clear();
      if (inputBuilder_ == null) {
        input_ = null;
      } else {
        input_ = null;
        inputBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.nuance.rpc.nlu.v1.RuntimeProto.internal_static_nuance_nlu_v1_InterpretRequest_descriptor;
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.InterpretRequest getDefaultInstanceForType() {
      return com.nuance.rpc.nlu.v1.InterpretRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.InterpretRequest build() {
      com.nuance.rpc.nlu.v1.InterpretRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.InterpretRequest buildPartial() {
      com.nuance.rpc.nlu.v1.InterpretRequest result = new com.nuance.rpc.nlu.v1.InterpretRequest(this);
      int from_bitField0_ = bitField0_;
      if (parametersBuilder_ == null) {
        result.parameters_ = parameters_;
      } else {
        result.parameters_ = parametersBuilder_.build();
      }
      if (modelBuilder_ == null) {
        result.model_ = model_;
      } else {
        result.model_ = modelBuilder_.build();
      }
      if (resourcesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          resources_ = java.util.Collections.unmodifiableList(resources_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.resources_ = resources_;
      } else {
        result.resources_ = resourcesBuilder_.build();
      }
      result.clientData_ = internalGetClientData();
      result.clientData_.makeImmutable();
      if (inputBuilder_ == null) {
        result.input_ = input_;
      } else {
        result.input_ = inputBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.nuance.rpc.nlu.v1.InterpretRequest) {
        return mergeFrom((com.nuance.rpc.nlu.v1.InterpretRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.nuance.rpc.nlu.v1.InterpretRequest other) {
      if (other == com.nuance.rpc.nlu.v1.InterpretRequest.getDefaultInstance()) return this;
      if (other.hasParameters()) {
        mergeParameters(other.getParameters());
      }
      if (other.hasModel()) {
        mergeModel(other.getModel());
      }
      if (resourcesBuilder_ == null) {
        if (!other.resources_.isEmpty()) {
          if (resources_.isEmpty()) {
            resources_ = other.resources_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureResourcesIsMutable();
            resources_.addAll(other.resources_);
          }
          onChanged();
        }
      } else {
        if (!other.resources_.isEmpty()) {
          if (resourcesBuilder_.isEmpty()) {
            resourcesBuilder_.dispose();
            resourcesBuilder_ = null;
            resources_ = other.resources_;
            bitField0_ = (bitField0_ & ~0x00000001);
            resourcesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getResourcesFieldBuilder() : null;
          } else {
            resourcesBuilder_.addAllMessages(other.resources_);
          }
        }
      }
      internalGetMutableClientData().mergeFrom(
          other.internalGetClientData());
      if (other.hasInput()) {
        mergeInput(other.getInput());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.nuance.rpc.nlu.v1.InterpretRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.nuance.rpc.nlu.v1.InterpretRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.nuance.rpc.nlu.v1.InterpretationParameters parameters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.nuance.rpc.nlu.v1.InterpretationParameters, com.nuance.rpc.nlu.v1.InterpretationParameters.Builder, com.nuance.rpc.nlu.v1.InterpretationParametersOrBuilder> parametersBuilder_;
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     * @return Whether the parameters field is set.
     */
    public boolean hasParameters() {
      return parametersBuilder_ != null || parameters_ != null;
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     * @return The parameters.
     */
    public com.nuance.rpc.nlu.v1.InterpretationParameters getParameters() {
      if (parametersBuilder_ == null) {
        return parameters_ == null ? com.nuance.rpc.nlu.v1.InterpretationParameters.getDefaultInstance() : parameters_;
      } else {
        return parametersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     */
    public Builder setParameters(com.nuance.rpc.nlu.v1.InterpretationParameters value) {
      if (parametersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parameters_ = value;
        onChanged();
      } else {
        parametersBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     */
    public Builder setParameters(
        com.nuance.rpc.nlu.v1.InterpretationParameters.Builder builderForValue) {
      if (parametersBuilder_ == null) {
        parameters_ = builderForValue.build();
        onChanged();
      } else {
        parametersBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     */
    public Builder mergeParameters(com.nuance.rpc.nlu.v1.InterpretationParameters value) {
      if (parametersBuilder_ == null) {
        if (parameters_ != null) {
          parameters_ =
            com.nuance.rpc.nlu.v1.InterpretationParameters.newBuilder(parameters_).mergeFrom(value).buildPartial();
        } else {
          parameters_ = value;
        }
        onChanged();
      } else {
        parametersBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     */
    public Builder clearParameters() {
      if (parametersBuilder_ == null) {
        parameters_ = null;
        onChanged();
      } else {
        parameters_ = null;
        parametersBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationParameters.Builder getParametersBuilder() {
      
      onChanged();
      return getParametersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationParametersOrBuilder getParametersOrBuilder() {
      if (parametersBuilder_ != null) {
        return parametersBuilder_.getMessageOrBuilder();
      } else {
        return parameters_ == null ?
            com.nuance.rpc.nlu.v1.InterpretationParameters.getDefaultInstance() : parameters_;
      }
    }
    /**
     * <pre>
     * Optional parameters for the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationParameters parameters = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.nuance.rpc.nlu.v1.InterpretationParameters, com.nuance.rpc.nlu.v1.InterpretationParameters.Builder, com.nuance.rpc.nlu.v1.InterpretationParametersOrBuilder> 
        getParametersFieldBuilder() {
      if (parametersBuilder_ == null) {
        parametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.nuance.rpc.nlu.v1.InterpretationParameters, com.nuance.rpc.nlu.v1.InterpretationParameters.Builder, com.nuance.rpc.nlu.v1.InterpretationParametersOrBuilder>(
                getParameters(),
                getParentForChildren(),
                isClean());
        parameters_ = null;
      }
      return parametersBuilder_;
    }

    private com.nuance.rpc.nlu.v1.ResourceReference model_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.nuance.rpc.nlu.v1.ResourceReference, com.nuance.rpc.nlu.v1.ResourceReference.Builder, com.nuance.rpc.nlu.v1.ResourceReferenceOrBuilder> modelBuilder_;
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     * @return Whether the model field is set.
     */
    public boolean hasModel() {
      return modelBuilder_ != null || model_ != null;
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     * @return The model.
     */
    public com.nuance.rpc.nlu.v1.ResourceReference getModel() {
      if (modelBuilder_ == null) {
        return model_ == null ? com.nuance.rpc.nlu.v1.ResourceReference.getDefaultInstance() : model_;
      } else {
        return modelBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     */
    public Builder setModel(com.nuance.rpc.nlu.v1.ResourceReference value) {
      if (modelBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        model_ = value;
        onChanged();
      } else {
        modelBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     */
    public Builder setModel(
        com.nuance.rpc.nlu.v1.ResourceReference.Builder builderForValue) {
      if (modelBuilder_ == null) {
        model_ = builderForValue.build();
        onChanged();
      } else {
        modelBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     */
    public Builder mergeModel(com.nuance.rpc.nlu.v1.ResourceReference value) {
      if (modelBuilder_ == null) {
        if (model_ != null) {
          model_ =
            com.nuance.rpc.nlu.v1.ResourceReference.newBuilder(model_).mergeFrom(value).buildPartial();
        } else {
          model_ = value;
        }
        onChanged();
      } else {
        modelBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     */
    public Builder clearModel() {
      if (modelBuilder_ == null) {
        model_ = null;
        onChanged();
      } else {
        model_ = null;
        modelBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     */
    public com.nuance.rpc.nlu.v1.ResourceReference.Builder getModelBuilder() {
      
      onChanged();
      return getModelFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     */
    public com.nuance.rpc.nlu.v1.ResourceReferenceOrBuilder getModelOrBuilder() {
      if (modelBuilder_ != null) {
        return modelBuilder_.getMessageOrBuilder();
      } else {
        return model_ == null ?
            com.nuance.rpc.nlu.v1.ResourceReference.getDefaultInstance() : model_;
      }
    }
    /**
     * <pre>
     * Required semantic model to perform the interpretation.
     * </pre>
     *
     * <code>.nuance.nlu.v1.ResourceReference model = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.nuance.rpc.nlu.v1.ResourceReference, com.nuance.rpc.nlu.v1.ResourceReference.Builder, com.nuance.rpc.nlu.v1.ResourceReferenceOrBuilder> 
        getModelFieldBuilder() {
      if (modelBuilder_ == null) {
        modelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.nuance.rpc.nlu.v1.ResourceReference, com.nuance.rpc.nlu.v1.ResourceReference.Builder, com.nuance.rpc.nlu.v1.ResourceReferenceOrBuilder>(
                getModel(),
                getParentForChildren(),
                isClean());
        model_ = null;
      }
      return modelBuilder_;
    }

    private java.util.List<com.nuance.rpc.nlu.v1.InterpretationResource> resources_ =
      java.util.Collections.emptyList();
    private void ensureResourcesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        resources_ = new java.util.ArrayList<com.nuance.rpc.nlu.v1.InterpretationResource>(resources_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.nuance.rpc.nlu.v1.InterpretationResource, com.nuance.rpc.nlu.v1.InterpretationResource.Builder, com.nuance.rpc.nlu.v1.InterpretationResourceOrBuilder> resourcesBuilder_;

    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public java.util.List<com.nuance.rpc.nlu.v1.InterpretationResource> getResourcesList() {
      if (resourcesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(resources_);
      } else {
        return resourcesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public int getResourcesCount() {
      if (resourcesBuilder_ == null) {
        return resources_.size();
      } else {
        return resourcesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationResource getResources(int index) {
      if (resourcesBuilder_ == null) {
        return resources_.get(index);
      } else {
        return resourcesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder setResources(
        int index, com.nuance.rpc.nlu.v1.InterpretationResource value) {
      if (resourcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourcesIsMutable();
        resources_.set(index, value);
        onChanged();
      } else {
        resourcesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder setResources(
        int index, com.nuance.rpc.nlu.v1.InterpretationResource.Builder builderForValue) {
      if (resourcesBuilder_ == null) {
        ensureResourcesIsMutable();
        resources_.set(index, builderForValue.build());
        onChanged();
      } else {
        resourcesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder addResources(com.nuance.rpc.nlu.v1.InterpretationResource value) {
      if (resourcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourcesIsMutable();
        resources_.add(value);
        onChanged();
      } else {
        resourcesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder addResources(
        int index, com.nuance.rpc.nlu.v1.InterpretationResource value) {
      if (resourcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourcesIsMutable();
        resources_.add(index, value);
        onChanged();
      } else {
        resourcesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder addResources(
        com.nuance.rpc.nlu.v1.InterpretationResource.Builder builderForValue) {
      if (resourcesBuilder_ == null) {
        ensureResourcesIsMutable();
        resources_.add(builderForValue.build());
        onChanged();
      } else {
        resourcesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder addResources(
        int index, com.nuance.rpc.nlu.v1.InterpretationResource.Builder builderForValue) {
      if (resourcesBuilder_ == null) {
        ensureResourcesIsMutable();
        resources_.add(index, builderForValue.build());
        onChanged();
      } else {
        resourcesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder addAllResources(
        java.lang.Iterable<? extends com.nuance.rpc.nlu.v1.InterpretationResource> values) {
      if (resourcesBuilder_ == null) {
        ensureResourcesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, resources_);
        onChanged();
      } else {
        resourcesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder clearResources() {
      if (resourcesBuilder_ == null) {
        resources_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        resourcesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public Builder removeResources(int index) {
      if (resourcesBuilder_ == null) {
        ensureResourcesIsMutable();
        resources_.remove(index);
        onChanged();
      } else {
        resourcesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationResource.Builder getResourcesBuilder(
        int index) {
      return getResourcesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationResourceOrBuilder getResourcesOrBuilder(
        int index) {
      if (resourcesBuilder_ == null) {
        return resources_.get(index);  } else {
        return resourcesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public java.util.List<? extends com.nuance.rpc.nlu.v1.InterpretationResourceOrBuilder> 
         getResourcesOrBuilderList() {
      if (resourcesBuilder_ != null) {
        return resourcesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(resources_);
      }
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationResource.Builder addResourcesBuilder() {
      return getResourcesFieldBuilder().addBuilder(
          com.nuance.rpc.nlu.v1.InterpretationResource.getDefaultInstance());
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationResource.Builder addResourcesBuilder(
        int index) {
      return getResourcesFieldBuilder().addBuilder(
          index, com.nuance.rpc.nlu.v1.InterpretationResource.getDefaultInstance());
    }
    /**
     * <pre>
     * Repeated. Optional resources to customize the interpretation.
     * </pre>
     *
     * <code>repeated .nuance.nlu.v1.InterpretationResource resources = 3;</code>
     */
    public java.util.List<com.nuance.rpc.nlu.v1.InterpretationResource.Builder> 
         getResourcesBuilderList() {
      return getResourcesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.nuance.rpc.nlu.v1.InterpretationResource, com.nuance.rpc.nlu.v1.InterpretationResource.Builder, com.nuance.rpc.nlu.v1.InterpretationResourceOrBuilder> 
        getResourcesFieldBuilder() {
      if (resourcesBuilder_ == null) {
        resourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.nuance.rpc.nlu.v1.InterpretationResource, com.nuance.rpc.nlu.v1.InterpretationResource.Builder, com.nuance.rpc.nlu.v1.InterpretationResourceOrBuilder>(
                resources_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        resources_ = null;
      }
      return resourcesBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> clientData_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetClientData() {
      if (clientData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ClientDataDefaultEntryHolder.defaultEntry);
      }
      return clientData_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableClientData() {
      onChanged();;
      if (clientData_ == null) {
        clientData_ = com.google.protobuf.MapField.newMapField(
            ClientDataDefaultEntryHolder.defaultEntry);
      }
      if (!clientData_.isMutable()) {
        clientData_ = clientData_.copy();
      }
      return clientData_;
    }

    public int getClientDataCount() {
      return internalGetClientData().getMap().size();
    }
    /**
     * <pre>
     * Optional key-value pairs to log.
     * </pre>
     *
     * <code>map&lt;string, string&gt; client_data = 4;</code>
     */

    public boolean containsClientData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetClientData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getClientDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getClientData() {
      return getClientDataMap();
    }
    /**
     * <pre>
     * Optional key-value pairs to log.
     * </pre>
     *
     * <code>map&lt;string, string&gt; client_data = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getClientDataMap() {
      return internalGetClientData().getMap();
    }
    /**
     * <pre>
     * Optional key-value pairs to log.
     * </pre>
     *
     * <code>map&lt;string, string&gt; client_data = 4;</code>
     */

    public java.lang.String getClientDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetClientData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional key-value pairs to log.
     * </pre>
     *
     * <code>map&lt;string, string&gt; client_data = 4;</code>
     */

    public java.lang.String getClientDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetClientData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearClientData() {
      internalGetMutableClientData().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Optional key-value pairs to log.
     * </pre>
     *
     * <code>map&lt;string, string&gt; client_data = 4;</code>
     */

    public Builder removeClientData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableClientData().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableClientData() {
      return internalGetMutableClientData().getMutableMap();
    }
    /**
     * <pre>
     * Optional key-value pairs to log.
     * </pre>
     *
     * <code>map&lt;string, string&gt; client_data = 4;</code>
     */
    public Builder putClientData(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableClientData().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Optional key-value pairs to log.
     * </pre>
     *
     * <code>map&lt;string, string&gt; client_data = 4;</code>
     */

    public Builder putAllClientData(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableClientData().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.nuance.rpc.nlu.v1.InterpretationInput input_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.nuance.rpc.nlu.v1.InterpretationInput, com.nuance.rpc.nlu.v1.InterpretationInput.Builder, com.nuance.rpc.nlu.v1.InterpretationInputOrBuilder> inputBuilder_;
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     * @return Whether the input field is set.
     */
    public boolean hasInput() {
      return inputBuilder_ != null || input_ != null;
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     * @return The input.
     */
    public com.nuance.rpc.nlu.v1.InterpretationInput getInput() {
      if (inputBuilder_ == null) {
        return input_ == null ? com.nuance.rpc.nlu.v1.InterpretationInput.getDefaultInstance() : input_;
      } else {
        return inputBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     */
    public Builder setInput(com.nuance.rpc.nlu.v1.InterpretationInput value) {
      if (inputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        input_ = value;
        onChanged();
      } else {
        inputBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     */
    public Builder setInput(
        com.nuance.rpc.nlu.v1.InterpretationInput.Builder builderForValue) {
      if (inputBuilder_ == null) {
        input_ = builderForValue.build();
        onChanged();
      } else {
        inputBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     */
    public Builder mergeInput(com.nuance.rpc.nlu.v1.InterpretationInput value) {
      if (inputBuilder_ == null) {
        if (input_ != null) {
          input_ =
            com.nuance.rpc.nlu.v1.InterpretationInput.newBuilder(input_).mergeFrom(value).buildPartial();
        } else {
          input_ = value;
        }
        onChanged();
      } else {
        inputBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     */
    public Builder clearInput() {
      if (inputBuilder_ == null) {
        input_ = null;
        onChanged();
      } else {
        input_ = null;
        inputBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationInput.Builder getInputBuilder() {
      
      onChanged();
      return getInputFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     */
    public com.nuance.rpc.nlu.v1.InterpretationInputOrBuilder getInputOrBuilder() {
      if (inputBuilder_ != null) {
        return inputBuilder_.getMessageOrBuilder();
      } else {
        return input_ == null ?
            com.nuance.rpc.nlu.v1.InterpretationInput.getDefaultInstance() : input_;
      }
    }
    /**
     * <pre>
     * Required input to interpret.
     * </pre>
     *
     * <code>.nuance.nlu.v1.InterpretationInput input = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.nuance.rpc.nlu.v1.InterpretationInput, com.nuance.rpc.nlu.v1.InterpretationInput.Builder, com.nuance.rpc.nlu.v1.InterpretationInputOrBuilder> 
        getInputFieldBuilder() {
      if (inputBuilder_ == null) {
        inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.nuance.rpc.nlu.v1.InterpretationInput, com.nuance.rpc.nlu.v1.InterpretationInput.Builder, com.nuance.rpc.nlu.v1.InterpretationInputOrBuilder>(
                getInput(),
                getParentForChildren(),
                isClean());
        input_ = null;
      }
      return inputBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nuance.nlu.v1.InterpretRequest)
  }

  // @@protoc_insertion_point(class_scope:nuance.nlu.v1.InterpretRequest)
  private static final com.nuance.rpc.nlu.v1.InterpretRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.nuance.rpc.nlu.v1.InterpretRequest();
  }

  public static com.nuance.rpc.nlu.v1.InterpretRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InterpretRequest>
      PARSER = new com.google.protobuf.AbstractParser<InterpretRequest>() {
    @java.lang.Override
    public InterpretRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new InterpretRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<InterpretRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InterpretRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.nuance.rpc.nlu.v1.InterpretRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

