// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: runtime.proto

package com.nuance.rpc.nlu.v1;

/**
 * <pre>
 **
 * Specifies a model, wordset, or a compiled wordset. Included in
 * [ResourceReference](#resourcereference).  Use the default,
 * UNDEFINED_RESOURCE_TYPE, to determine the type from the
 * content-type header returned by the resource's server.
 * </pre>
 *
 * Protobuf enum {@code nuance.nlu.v1.EnumResourceType}
 */
public enum EnumResourceType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Default. Use the content-type header from the resource's server to determine the type.
   * </pre>
   *
   * <code>UNDEFINED_RESOURCE_TYPE = 0;</code>
   */
  UNDEFINED_RESOURCE_TYPE(0),
  /**
   * <pre>
   * A semantic model from Mix.nlu.
   * </pre>
   *
   * <code>SEMANTIC_MODEL = 1;</code>
   */
  SEMANTIC_MODEL(1),
  /**
   * <pre>
   * Currently unsupported. Use InterpretationResource - inline_wordset.
   * </pre>
   *
   * <code>WORDSET = 2;</code>
   */
  WORDSET(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Default. Use the content-type header from the resource's server to determine the type.
   * </pre>
   *
   * <code>UNDEFINED_RESOURCE_TYPE = 0;</code>
   */
  public static final int UNDEFINED_RESOURCE_TYPE_VALUE = 0;
  /**
   * <pre>
   * A semantic model from Mix.nlu.
   * </pre>
   *
   * <code>SEMANTIC_MODEL = 1;</code>
   */
  public static final int SEMANTIC_MODEL_VALUE = 1;
  /**
   * <pre>
   * Currently unsupported. Use InterpretationResource - inline_wordset.
   * </pre>
   *
   * <code>WORDSET = 2;</code>
   */
  public static final int WORDSET_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EnumResourceType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EnumResourceType forNumber(int value) {
    switch (value) {
      case 0: return UNDEFINED_RESOURCE_TYPE;
      case 1: return SEMANTIC_MODEL;
      case 2: return WORDSET;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EnumResourceType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EnumResourceType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EnumResourceType>() {
          public EnumResourceType findValueByNumber(int number) {
            return EnumResourceType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.nuance.rpc.nlu.v1.RuntimeProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final EnumResourceType[] VALUES = values();

  public static EnumResourceType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EnumResourceType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:nuance.nlu.v1.EnumResourceType)
}

