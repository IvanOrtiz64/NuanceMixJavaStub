// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: runtime.proto

package com.nuance.rpc.nlu.v1;

public interface InterpretationParametersOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nuance.nlu.v1.InterpretationParameters)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Format of interpretation result. Default is SINGLE_INTENT.
   * </pre>
   *
   * <code>.nuance.nlu.v1.EnumInterpretationResultType interpretation_result_type = 1;</code>
   * @return The enum numeric value on the wire for interpretationResultType.
   */
  int getInterpretationResultTypeValue();
  /**
   * <pre>
   * Format of interpretation result. Default is SINGLE_INTENT.
   * </pre>
   *
   * <code>.nuance.nlu.v1.EnumInterpretationResultType interpretation_result_type = 1;</code>
   * @return The interpretationResultType.
   */
  com.nuance.rpc.nlu.v1.EnumInterpretationResultType getInterpretationResultType();

  /**
   * <pre>
   * Format for input in the log. Default is PLAINTEXT.
   * </pre>
   *
   * <code>.nuance.nlu.v1.EnumInterpretationInputLoggingMode interpretation_input_logging_mode = 2;</code>
   * @return The enum numeric value on the wire for interpretationInputLoggingMode.
   */
  int getInterpretationInputLoggingModeValue();
  /**
   * <pre>
   * Format for input in the log. Default is PLAINTEXT.
   * </pre>
   *
   * <code>.nuance.nlu.v1.EnumInterpretationInputLoggingMode interpretation_input_logging_mode = 2;</code>
   * @return The interpretationInputLoggingMode.
   */
  com.nuance.rpc.nlu.v1.EnumInterpretationInputLoggingMode getInterpretationInputLoggingMode();

  /**
   * <pre>
   * Parameters to pass to custom post-processing ECMA scripts in the model.
   * </pre>
   *
   * <code>map&lt;string, string&gt; post_processing_script_parameters = 3;</code>
   */
  int getPostProcessingScriptParametersCount();
  /**
   * <pre>
   * Parameters to pass to custom post-processing ECMA scripts in the model.
   * </pre>
   *
   * <code>map&lt;string, string&gt; post_processing_script_parameters = 3;</code>
   */
  boolean containsPostProcessingScriptParameters(
      java.lang.String key);
  /**
   * Use {@link #getPostProcessingScriptParametersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getPostProcessingScriptParameters();
  /**
   * <pre>
   * Parameters to pass to custom post-processing ECMA scripts in the model.
   * </pre>
   *
   * <code>map&lt;string, string&gt; post_processing_script_parameters = 3;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getPostProcessingScriptParametersMap();
  /**
   * <pre>
   * Parameters to pass to custom post-processing ECMA scripts in the model.
   * </pre>
   *
   * <code>map&lt;string, string&gt; post_processing_script_parameters = 3;</code>
   */

  java.lang.String getPostProcessingScriptParametersOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Parameters to pass to custom post-processing ECMA scripts in the model.
   * </pre>
   *
   * <code>map&lt;string, string&gt; post_processing_script_parameters = 3;</code>
   */

  java.lang.String getPostProcessingScriptParametersOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Maximum interpretations for the result. Default is 0 for the NLU server's configured setting.
   * </pre>
   *
   * <code>uint32 max_interpretations = 12;</code>
   * @return The maxInterpretations.
   */
  int getMaxInterpretations();
}
