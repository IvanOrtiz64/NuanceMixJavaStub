// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interpretation-common.proto

package com.nuance.rpc.nlu.v1;

/**
 * <pre>
 **
 * Range of text in the input literal. Included in
 * [OperatorNode](#operatornode), [IntentNode](#intentnode),
 * [EntityNode](#entitynode), and
 * [SingleIntentEntity](#singleintententity).
 * </pre>
 *
 * Protobuf type {@code nuance.nlu.v1.TextRange}
 */
public  final class TextRange extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nuance.nlu.v1.TextRange)
    TextRangeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TextRange.newBuilder() to construct.
  private TextRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TextRange() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TextRange();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TextRange(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            startIndex_ = input.readUInt32();
            break;
          }
          case 16: {

            endIndex_ = input.readUInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.nuance.rpc.nlu.v1.InterpretationCommonProto.internal_static_nuance_nlu_v1_TextRange_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.nuance.rpc.nlu.v1.InterpretationCommonProto.internal_static_nuance_nlu_v1_TextRange_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.nuance.rpc.nlu.v1.TextRange.class, com.nuance.rpc.nlu.v1.TextRange.Builder.class);
  }

  public static final int START_INDEX_FIELD_NUMBER = 1;
  private int startIndex_;
  /**
   * <pre>
   * Inclusive, 0-based character position.
   * </pre>
   *
   * <code>uint32 start_index = 1;</code>
   * @return The startIndex.
   */
  public int getStartIndex() {
    return startIndex_;
  }

  public static final int END_INDEX_FIELD_NUMBER = 2;
  private int endIndex_;
  /**
   * <pre>
   * Exclusive, 0-based character position.
   * </pre>
   *
   * <code>uint32 end_index = 2;</code>
   * @return The endIndex.
   */
  public int getEndIndex() {
    return endIndex_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (startIndex_ != 0) {
      output.writeUInt32(1, startIndex_);
    }
    if (endIndex_ != 0) {
      output.writeUInt32(2, endIndex_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (startIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, startIndex_);
    }
    if (endIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, endIndex_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.nuance.rpc.nlu.v1.TextRange)) {
      return super.equals(obj);
    }
    com.nuance.rpc.nlu.v1.TextRange other = (com.nuance.rpc.nlu.v1.TextRange) obj;

    if (getStartIndex()
        != other.getStartIndex()) return false;
    if (getEndIndex()
        != other.getEndIndex()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + START_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getStartIndex();
    hash = (37 * hash) + END_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getEndIndex();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.nuance.rpc.nlu.v1.TextRange parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.nuance.rpc.nlu.v1.TextRange prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   * Range of text in the input literal. Included in
   * [OperatorNode](#operatornode), [IntentNode](#intentnode),
   * [EntityNode](#entitynode), and
   * [SingleIntentEntity](#singleintententity).
   * </pre>
   *
   * Protobuf type {@code nuance.nlu.v1.TextRange}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nuance.nlu.v1.TextRange)
      com.nuance.rpc.nlu.v1.TextRangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nuance.rpc.nlu.v1.InterpretationCommonProto.internal_static_nuance_nlu_v1_TextRange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nuance.rpc.nlu.v1.InterpretationCommonProto.internal_static_nuance_nlu_v1_TextRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nuance.rpc.nlu.v1.TextRange.class, com.nuance.rpc.nlu.v1.TextRange.Builder.class);
    }

    // Construct using com.nuance.rpc.nlu.v1.TextRange.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      startIndex_ = 0;

      endIndex_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.nuance.rpc.nlu.v1.InterpretationCommonProto.internal_static_nuance_nlu_v1_TextRange_descriptor;
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.TextRange getDefaultInstanceForType() {
      return com.nuance.rpc.nlu.v1.TextRange.getDefaultInstance();
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.TextRange build() {
      com.nuance.rpc.nlu.v1.TextRange result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.nuance.rpc.nlu.v1.TextRange buildPartial() {
      com.nuance.rpc.nlu.v1.TextRange result = new com.nuance.rpc.nlu.v1.TextRange(this);
      result.startIndex_ = startIndex_;
      result.endIndex_ = endIndex_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.nuance.rpc.nlu.v1.TextRange) {
        return mergeFrom((com.nuance.rpc.nlu.v1.TextRange)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.nuance.rpc.nlu.v1.TextRange other) {
      if (other == com.nuance.rpc.nlu.v1.TextRange.getDefaultInstance()) return this;
      if (other.getStartIndex() != 0) {
        setStartIndex(other.getStartIndex());
      }
      if (other.getEndIndex() != 0) {
        setEndIndex(other.getEndIndex());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.nuance.rpc.nlu.v1.TextRange parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.nuance.rpc.nlu.v1.TextRange) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int startIndex_ ;
    /**
     * <pre>
     * Inclusive, 0-based character position.
     * </pre>
     *
     * <code>uint32 start_index = 1;</code>
     * @return The startIndex.
     */
    public int getStartIndex() {
      return startIndex_;
    }
    /**
     * <pre>
     * Inclusive, 0-based character position.
     * </pre>
     *
     * <code>uint32 start_index = 1;</code>
     * @param value The startIndex to set.
     * @return This builder for chaining.
     */
    public Builder setStartIndex(int value) {
      
      startIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Inclusive, 0-based character position.
     * </pre>
     *
     * <code>uint32 start_index = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartIndex() {
      
      startIndex_ = 0;
      onChanged();
      return this;
    }

    private int endIndex_ ;
    /**
     * <pre>
     * Exclusive, 0-based character position.
     * </pre>
     *
     * <code>uint32 end_index = 2;</code>
     * @return The endIndex.
     */
    public int getEndIndex() {
      return endIndex_;
    }
    /**
     * <pre>
     * Exclusive, 0-based character position.
     * </pre>
     *
     * <code>uint32 end_index = 2;</code>
     * @param value The endIndex to set.
     * @return This builder for chaining.
     */
    public Builder setEndIndex(int value) {
      
      endIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Exclusive, 0-based character position.
     * </pre>
     *
     * <code>uint32 end_index = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndIndex() {
      
      endIndex_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nuance.nlu.v1.TextRange)
  }

  // @@protoc_insertion_point(class_scope:nuance.nlu.v1.TextRange)
  private static final com.nuance.rpc.nlu.v1.TextRange DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.nuance.rpc.nlu.v1.TextRange();
  }

  public static com.nuance.rpc.nlu.v1.TextRange getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TextRange>
      PARSER = new com.google.protobuf.AbstractParser<TextRange>() {
    @java.lang.Override
    public TextRange parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TextRange(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TextRange> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TextRange> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.nuance.rpc.nlu.v1.TextRange getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

